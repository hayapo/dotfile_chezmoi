HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

# paths
# export PATH="$HOME/.nodenv/shims:/usr/local/bin:/usr/bin:/bin:$PATH"
# export PATH="$HOME/.nodenv/bin:$PATH"
# export PATH=$(brew --prefix)/bin:$PATH
# export PATH=$HOME/.cargo/bin:$PATH
# export PATH=$HOME/.cargo/env:$PATH
# export PATH=/usr/local/go/bin:$PATH
# export PATH=$HOME/go/bin:$PATH
# export PATH=$HOME/.rye/env:$PATH
# export PATH="$HOME/.rye/shims:$PATH"
# export NVM_DIR="$HOME/.nvm"
export GPG_TTY=$(tty)

# bind keys
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey ';5C' forward-word
bindkey ';5D' backward-word
bindkey '^[o' forward-word
bindkey '^[u' backward-word
bindkey '^[p' backward-kill-word
bindkey '^K' kill-whole-line



# alias
## lsd
alias lsd="lsd --tree -I "target" -I "node_modules" -I "fonts" -I "Downloads" "
alias ls="lsd --tree --depth 1"
alias ll="ls -l"
alias lsa="ls -la"

## Git
### git 
alias gc="git checkout"
alias gc-b="git checkout -b"
alias gpush="git push"
alias gpull="git pull"
alias ga="git add"
alias gs="git status"
alias gc-m="git commit -m"
alias ghg="ghq get"
alias stash="stash -u"
alias gsl="git stash list"

### lazy git
alias lg="lazygit"

## alias exec
alias ex "exec zsh"

## alias pbcopy
{{ if eq .chezmoi.os "linux" }}
alias pbcopy="xsel --clipboard --input"
{{ end }}

## fzf
alias fp="fzf --preview 'bat  --color=always --style=header,grid --line-range :100 {}'"
bindkey -s '^p' 'fp\n'

function choice () {
  query="$1"
  header="$2"
  pipe=$(cat - | fzf --filter="$1" --header="$header")
  if [ $(wc -l <<< $pipe) -eq 1 ]; then
    echo "$pipe"
  else
    echo "$pipe" | fzf --query="$query" --header="$header"
  fi
}

## ghq配下のディレクトリを一覧表示
function _ghq_fzf_repo() {
    local repo="$(ghq list | fzf --height=100% --border --preview="ls -AF --color=always ${$(ghq root)}/{1}")"
    if [ -z "$repo" ]; then
        zle reset-prompt
        return
    fi

    BUFFER="cd $(ghq root)/$repo"

    zle accept-line
    zle reset-prompt
}
zle -N ghq_fzf_repo _ghq_fzf_repo
bindkey '^g' ghq_fzf_repo

## fzf history
function fzf-select-history() {
    BUFFER=$(history -n -r 1 | fzf --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle reset-prompt
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history

## awsアカウント
function aws-account () {
  query="$1"

  local selected_profile
  selected_profile=$(aws configure list-profiles 2>/dev/null | choice "$query" "ログインするアカウントを選択してください")

  export AWS_DEFAULT_PROFILE=$selected_profile
  export AWS_PROFILE=$selected_profile

  if [ -z "$AWS_DEFAULT_PROFILE" ]; then
    echo "アカウントが選択されませんでした。" >&2
    return 1
  fi

  if [ -z "$(aws sts get-caller-identity --profile $AWS_DEFAULT_PROFILE 2> /dev/null)" ]; then
    echo "セッションがありません。SSOログインを実行します..." >&2
    aws sso login --profile=$AWS_DEFAULT_PROFILE
  else
    echo "既存のセッションが有効です。" >&2
  fi

  echo switched to $AWS_DEFAULT_PROFILE >&2
}
zle -N aws-account
bindkey '^z' aws-account

# z
. $(brew --prefix)/etc/profile.d/z.sh

## syntax highlighting
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

## complations
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  
  autoload -Uz compinit
  compinit
fi

# evals
# eval "$($(brew --prefix)/bin/brew shellenv)"
# eval "$(sheldon source)"
# eval "$(anyenv init -)"
# eval "$(nodenv init -)"

# initialize phpbrew
source $HOME/.phpbrew/bashrc

# for macOS keychain
{{ if eq .chezmoi.os "darwin" }}
ssh-add --apple-load-keychain
### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/hayato_saitou/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
{{ end }}

source ~/.safe-chain/scripts/init-posix.sh # Safe-chain Zsh initialization script
eval "$(starship init zsh)"
